name: deploy-extension-test

on:
  workflow_dispatch:

jobs:
  deploy-extension-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: deploy-extension
        id: deploy-extension
        env:
          PUBLISHER_NAME: ${{ secrets.PUBLISHER_NAME }}
          ORG_NAME: ${{ secrets.ORG_NAME }}
          USER_TOKEN: ${{ secrets.USER_TOKEN }}
        run: |
          vss_extension_dev=$(cat vss-extension-dev.json)
          extension_name=$(echo $vss_extension | jq -r ".name = \"$name\"")
          extension_publisher=$(echo $vss_extension | jq -r ".publisher = \"$PUBLISHER_ID\"")  
          extension_version=$(echo $vss_extension_dev | jq -r '.version')
          echo "extension_name" $extension_name
          echo "extension_publisher" $extension_publisher
          echo "current version: " $extension_version
          if [[ "$COMMIT_MESSAGE" == "fix" ]]; then
             version=$major.$minor.$((patch+1))
             echo "updating extension version $azure_extension_version to $version"
          else
            version=$azure_extension_version
          fi
          cat vss-extension.json
          echo "Deploying $extension_name extension on $extension_publisher publisher  with latest-version: $extension_version"  
          echo "Successful Deployed $extension_name extension on $extension_publisher publisher  with latest-version: $extension_version"  
          echo "AZURE_EXTENSION_VERSION=$version"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-artifact
          path: vss-extension.json
#          npm i -g tfx-cli
#          tfx extension publish --publisher TestCIPub  --manifest-globs vss-extension-dev.json --token ${USER_TOKEN}